using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace cw9
{
    class Program
    {
        public class Prostokat
        {
            private double dlugosc;
            private double szerokosc;
            public Prostokat(double dl, double sz)
            {
                dlugosc = dl;
                szerokosc = sz;
            }
            private double Powierzchnia()
            {
                return dlugosc * szerokosc;
            }
            private double Obwod()
            {
                return 2 * dlugosc + 2 * szerokosc;
            }
            public string Prezentuj()
            {
                return "Obwod: " + Obwod() + ", Powierzchnia: " + Powierzchnia();
            }
            public static string NajwiekszeOiPMetoda(Prostokat[] prostokaty_input)
            {
                double maxPow = 0;
                double maxObw = 0;
                Prostokat[] prostokaty =  {
                new Prostokat(1, 2),
                new Prostokat(3, 4),
                new Prostokat(5, 6),
                new Prostokat(7, 8),
                new Prostokat(9, 10),
                new Prostokat(11, 12),
                new Prostokat(13, 14),
                };
                for (int i = 0; i < prostokaty.Length; i++)
                {
                    if (prostokaty[i].Obwod() >= maxObw)
                    {
                        maxObw = prostokaty[i].Obwod();
                    }
                }
                for (int j = 0; j < prostokaty.Length; j++)
                {
                    if (prostokaty[j].Powierzchnia() >= maxPow)
                    {
                        maxPow = prostokaty[j].Powierzchnia();
                    }
                }
                return  "Najwiekszy Obwod: " + maxObw + ", Najwiekszy Powierzchnia: " + maxPow;
            }
        }
        static void Main(string[] args)
        {
            Prostokat[] prostokaty = {
            new Prostokat(1, 2),
            new Prostokat(3, 4),
            new Prostokat(5, 6),
            new Prostokat(7, 8),
            new Prostokat(9, 10),
            new Prostokat(11, 12),
            new Prostokat(13, 14),
        };
            foreach(Prostokat p in prostokaty)
            {
                Console.WriteLine(p.Prezentuj());
            }
                Console.WriteLine(Prostokat.NajwiekszeOiPMetoda(prostokaty));
            Console.ReadKey();
        }
    }
}
